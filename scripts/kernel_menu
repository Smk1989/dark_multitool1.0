#!/bin/bash
clear
echo "=============================================="
echo 
echo "******* Welcome to kernel-tools **************"
echo
echo "Disclaimer: Please note that this section is only meant for you"
echo "if you know how to compile a kernel from its source...I do not"
echo "take responsibility if your kernel doesnt boot up"
echo "or is compiled wrongly..Nor will the tool do everything for you"
echo "This section only provides you with tools and utilities to free you"
echo "from a few tasks required when you are compiling a kernel from its source...."
echo
source ~/dark_multitool1.0/scripts/config
cp ~/dark_multitool1.0/bin/* $HOME/bin
echo "Reading config................"
echo "Current kernel work directory = $kerneldir_name"
echo
echo "******* Please select what you want to do ********"
echo
echo "1 - Define/change work directory for your kernel "
echo
echo "2 - Install necessary libraries"
echo
echo "3 - To work on Sony kernel"
echo
echo "4 - To work on Nexus kernel"
echo
echo "5 - To work on Samsung kernel"
echo
echo "6 - Download toolchains"
echo
echo "7 - Unpack boot.img to get zImage and Ramdisk"
echo 
echo "8 - Unpack or Repack ramdisk"
echo
echo "9 - Build zImage for a generic kernel(Experimental)"
echo
echo "10 - Take a kernel log(dmsg)"
echo
echo "11 - Exit"
read input
case $input in
1) echo "--------Before you proceed please create a work directory for your files-------"
   echo 
   echo "You can create nested directories(for eg:android/system).Enter the directory name in the same format given below"
   echo
   echo "Directory name for one directory under home folder or parent directory/child directory/...)"
   echo "***************************************************************************************"
   read kerneldir_name
   mkdir -p ~/$kerneldir_name
   TARGET_KEY="kerneldir_name"
   REPLACEMENT_VALUE="$kerneldir_name"
   sed -i "s@\($TARGET_KEY *= *\).*@\1$REPLACEMENT_VALUE@" ~/dark_multitool1.0/scripts/config;
   read;;
2). ~/dark_multitool1.0/Cyanogenmod_scripts/import_libraries/import_lib;;
3)./kernel-tools/Sony;;
4)./kernel-tools/nexus_kernel;;
5)./kernel-tools/samsung;;
6)echo "A few toolchains will be downloaded"
  echo "Press enter to continue"
  read enterkey
  cd
  git clone https://github.com/Smk1989/android_toolchains.git
  echo "Press enter to continue"
  read enterkey;; 
7)clear
echo "Place boot.img in the input folder of the tool"
echo
echo "Press Enter to continue"
read enterkey
cd ~/dark_multitool1.0/input
echo "1 - Unpack boot.img by unpack-bootimg pearl script"
echo "2 - Unpack boot.img by umkbootimg"
read inputboot
if [ "$inputboot" = "1" ]
then
unpack-bootimg.pl boot.img
elif [ "$inputboot" = "2" ]
then
umkbootimg boot.img
else 
echo "Enter valid choice"
fi
rm *.img
mv ~/dark_multitool1.0/input/* ~/dark_multitool1.0/output
echo -n "" > Put_files_here
cd ~/dark_multitool1.0/output
rm Put_files_here
echo "Done..please find your extracted zImage and ramdisk in the output folder of the tool(press enter)"
read enterkey;;
8)./kernel-tools/unpack_repack;;
9)clear
  echo "Please enter a new defconfig name"
  read config_name
  TARGET_KEY="config_name"
  REPLACEMENT_VALUE="$config_name"
  sed -i "s@\($TARGET_KEY *= *\).*@\1$REPLACEMENT_VALUE@" ~/dark_multitool1.0/scripts/config
. ~/dark_multitool1.0/kernel-tools/toolchain_selector
echo "Press enter to continue with defconfig and toolchain selected"
read enterkey;;
11) ./kernel-tools/take_log;;
11)exit;;
esac

  
   
   
   
